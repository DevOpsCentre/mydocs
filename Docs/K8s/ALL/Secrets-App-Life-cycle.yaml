=======================================================================
                          APP LIFE CYCLE MANAGEMENT - secrets
=======================================================================
Configuring Secrets:
    
   #Config-secret.yml:
  ------------------------------------------
   ---  
    apiVersion: v1
    kind: Secret
    metadata:
      name: my-secret
    data:
    #DB_HOST: mysql   
     DB_HOST: 98sdu89suv9su=== # to encrypt this 'mysql'   ->  echo -n mysql | base64
       # to decrypt this 'mysql'  ->  echo -n mysql | base64 --decode   
   -----------------------------------
  #To create from yaml file:
    kubectl create -f Config-secret.yml   
    
 
  #To see list of secrets:
    kubectl get secrets
     
  #To create Secret from literals
    kubectl create secret generic <secretName>  --from-literals=<key>=<value>
    #ex: 
      kubectl create secret generic my-secret  --from-literals=DB_HOST=mysql
      
  #To create Secret from file
    kubectl create secret generic <secretName>  --from-file=<filePath>
    #ex: 
      kubectl create secret generic my-secret  --from-file=my-secret.properties
      
      #my-secret.properties
    -----------------------
    ---     
     DB_HOST=MYSQL     # should be encoded in base64 atleast
    -----------------------
 -----------------------------------------------------------------------------
 ---
#pod-def.yaml
 apiVersion: v1
 kind: Pod
 metadata:
   name: webapp
   labels:
     app: webapp
     tier: frontend
 spec:
   contianers:
     - name: mysql
       image: mysql:5.7
       #can use anyone of the three below envFrom or env or volumes
    #  envFrom:
    #   - secretRef:
    #          name: my-secret
       env:
         - name: DB_HOST
           valueFrom:
             secretKeyRef:
               name: my-secret
               key: DB_HOST
    #  volumes:
    #    - name: app-secret-volume
    #       secret: 
    #          secretName: my-secret
    # note: each attribute is created as file in the volumes 
    # vi /opt/app-secret-volume/DB_HOST
