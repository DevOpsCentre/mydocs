=====================================================================
              JSON path - queries
=====================================================================

#Use JSON PATH query to fetch node names and store them in /opt/outputs/node_names.txt

kubectl get nodes -o=jsonpath='{.items[*].metadata.name}' > /opt/outputs/node_names.txt

#Use JSON PATH query to retrieve the osImages of all the nodes and 
#store it in a file /opt/outputs/nodes_os.txt

kubectl get nodes -o jsonpath='{.items[*].status.nodeInfo.osImage}' > /opt/outputs/nodes_os.txt

#A kube-config file is present at /root/my-kube-config. 
#Get the user names from it and store it in a file /opt/outputs/users.txt
 kubectl config view --kubeconfig=/root/my-kube-config

 kubectl config view --kubeconfig=/root/my-kube-config -o jsonpath="{.users[*].name}" > /opt/outputs/users.txt

#A set of Persistent Volumes are available. Sort them based on their capacity and store the result in the file /opt/outputs/storage-capacity-sorted.txt
 kubectl get pv --sort-by=.spec.capacity.storage > /opt/outputs/storage-capacity-sorted.txt

#Retrieve just the first 2 columns of output and 
#store it in /opt/outputs/pv-and-capacity-sorted.txt
#The columns should be named NAME and CAPACITY. 
#Use the custom-columns option. And remember it should still be sorted as in the previous question.

kubectl get pv --sort-by=.spec.capacity.storage -o=custom-columns=NAME:.metadata.name,CAPACITY:.spec.capacity.storage > /opt/outputs/pv-and-capacity-sorted.txt

#Use a JSON PATH query to identify the context configured for the aws-user 
#in the my-kube-config context file and store the result in /opt/outputs/aws-context-name.

kubectl config view --kubeconfig=my-kube-config -o jsonpath="{.contexts[?(@.context.user=='aws-user')].name}" > /opt/outputs/aws-context-name
